<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <ItemGroup>
    <UnitTest Include="**/unittests/**/*.csproj" Exclude="" />
    <StressTest Include="**/stresstests/**/*.csproj" Exclude="" />
    <ExeTest Include="**/exetests/**/*.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
  </ItemGroup>
  <PropertyGroup>
    <MetaRunner>$(MSBuildProjectDirectory)/nunit_tools/bin/nunit_meta_runner_coreclr.dll</MetaRunner>
    <TestRunner>$(MSBuildProjectDirectory)/nunit_tools/bin/nunitlite-runner_coreclr.dll</TestRunner>
    <UnitTestResultDir>$(MSBuildProjectDirectory)/nunit_unit_coreclr_reports</UnitTestResultDir>
    <StressTestResultDir>$(MSBuildProjectDirectory)/nunit_stress_coreclr_reports</StressTestResultDir>
    <ExeTestResultDir>$(MSBuildProjectDirectory)/nunit_exe_coreclr_reports</ExeTestResultDir>
    <TargetFrameworkVersion>net9.0</TargetFrameworkVersion>
    <TargetFrameworkProfile />
    <ProjectGuid>{D47C425F-42D3-4EE3-A044-B8A77B2B7A2A}</ProjectGuid>
  </PropertyGroup>
  <Target Name="Init">
    <Exec Command="dotnet restore nunitlite-runner_coreclr.csproj" WorkingDirectory="nunit_tools/nunit_test_runner" ContinueOnError="false" />
    <Exec Command="dotnet build -c Release --output $(MSBuildProjectDirectory)/nunit_tools/bin nunitlite-runner_coreclr.csproj" WorkingDirectory="nunit_tools/nunit_test_runner" ContinueOnError="false" />
    <Exec Command="dotnet restore nunit_meta_runner_coreclr.csproj" WorkingDirectory="nunit_tools/nunit_meta_runner" ContinueOnError="false" />
    <Exec Command="dotnet build -c Release --output $(MSBuildProjectDirectory)/nunit_tools/bin nunit_meta_runner_coreclr.csproj" WorkingDirectory="nunit_tools/nunit_meta_runner" ContinueOnError="false" />
  </Target>
  <Target Name="Build" DependsOnTargets="Init;RunExeTests;RunUnitTests" />
  <Target Name="RunUnitTests" DependsOnTargets="Init">
    <RemoveDir Directories="$(UnitTestResultDir)" ContinueOnError="true" />
    <MakeDir Directories="$(UnitTestResultDir)" ContinueOnError="true" />
    <Exec Command="dotnet restore $([System.IO.Path]::GetFileName(%(UnitTest.Identity)))" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))" ContinueOnError="false" />
    <Exec Command="dotnet build -c Release $([System.IO.Path]::GetFileName(%(UnitTest.Identity)))" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))" ContinueOnError="true" />
    <Exec Command="dotnet $(MetaRunner) -t 1800000 -r $(TestRunner) -d $(UnitTestResultDir) -a bin/Release/netstandard2.0/$([System.IO.Path]::GetFileNameWithoutExtension(%(UnitTest.Identity))).dll -o &quot; --workers=1&quot;" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))" ContinueOnError="true" Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))/bin/Release/netstandard2.0/$([System.IO.Path]::GetFileNameWithoutExtension(%(UnitTest.Identity))).dll')" />
  </Target>
  <Target Name="RunStressTests" DependsOnTargets="Init">
    <RemoveDir Directories="$(StressTestResultDir)" ContinueOnError="true" />
    <MakeDir Directories="$(StressTestResultDir)" ContinueOnError="true" />
    <Exec Command="dotnet restore $([System.IO.Path]::GetFileName(%(StressTest.Identity)))" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))" ContinueOnError="false" />
    <Exec Command="dotnet build -c Release $([System.IO.Path]::GetFileName(%(StressTest.Identity)))" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))" ContinueOnError="true" />
    <Exec Command="dotnet $(MetaRunner) -t 1800000 -r $(TestRunner) -d $(StressTestResultDir) -a bin/Release/netstandard2.0/$([System.IO.Path]::GetFileNameWithoutExtension(%(StressTest.Identity))).dll -o &quot; --workers=1&quot;" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))" ContinueOnError="true" Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))/bin/Release/netstandard2.0/$([System.IO.Path]::GetFileNameWithoutExtension(%(StressTest.Identity))).dll')" />
  </Target>
  <Target Name="RunExeTests">
    <RemoveDir Directories="$(ExeTestResultDir)" ContinueOnError="true" />
    <MakeDir Directories="$(ExeTestResultDir)" ContinueOnError="true" />
    <Exec Command="dotnet restore &quot;$([System.IO.Path]::GetFileName(%(ExeTest.Identity)))&quot;" WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(ExeTest.Identity)))" ContinueOnError="false" />
    <Exec Command="dotnet run -c Release -p &quot;$([System.IO.Path]::GetFileName(%(ExeTest.Identity)))&quot; " WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(ExeTest.Identity)))" ContinueOnError="true" />
  </Target>
  <Target Name="Restore" />
</Project>
